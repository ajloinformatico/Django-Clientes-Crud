"""
Django settings for django_init project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6rr8!vplwfybj-17gyj++*2eiw$-ox54x9hbjp^ab6-9p7ro1l'  # Clave necesaria para poner el proyecto en producción

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# Versión de prueba en desarrollo se deja así. Cuando está en modo prueba acepta todas las urls y dominios
# Cuando el proyecto para a producción solo acepta las URL en la constante ALLOWEB_HOSTS

ALLOWED_HOSTS = []
# Dominio y ip permitidas cuando el proyecto para a producción

# Application definition
# Modulos que trae incorporados django de serie.
# Cada vez que se cree una aplicación hay que añadirla a la lista
INSTALLED_APPS = [
    'django.contrib.admin',  # Modulo de administración
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',  # gestión de sesiones
    'django.contrib.messages',  # mensajes de error
    'django.contrib.staticfiles',  # css js
    'aplicaciones.principal',  # Aplicación personal
]
# Seguridad frente a vulnerabilidades
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_init.urls'  # hace referencia al archvio urls.py que lleva a cabo la gestión de url del proyecto
# Hace referencia a donde van a estar almacenadas las plantillas en el proyecto
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],  # Se colocan aquí el directorio o directorios de nuestras plantillas
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_init.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
# Gestión de bases de datos Por defecto sqlite3 Aquí se puede usar mysql, postgree sql, mongoDB etc
# Se puede usar una o varias bases de datos
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
# Autenticaciones de usuario
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'  # Idioma en el que django devuelve los mensajes

TIME_ZONE = 'UTC'  # Zona horaria

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'  # Ubicación donde django almacena los archivos estáticos
